// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFirstApi.Graphql.Data;

#nullable disable

namespace MyFirstApi.Graphql.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240731081429_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("HasComputers")
                        .HasColumnType("bit");

                    b.Property<bool>("HasProjector")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWhiteboard")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Classrooms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000601"),
                            Capacity = 20,
                            Description = "Classroom 1",
                            HasComputers = true,
                            HasProjector = false,
                            HasWhiteboard = true,
                            Name = "Classroom 1"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000602"),
                            Capacity = 30,
                            Description = "Classroom 2",
                            HasComputers = true,
                            HasProjector = false,
                            HasWhiteboard = true,
                            Name = "Classroom 2"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000603"),
                            Capacity = 40,
                            Description = "Classroom 3",
                            HasComputers = true,
                            HasProjector = true,
                            HasWhiteboard = true,
                            Name = "Classroom 3"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000604"),
                            Capacity = 50,
                            Description = "Classroom 4",
                            HasComputers = false,
                            HasProjector = false,
                            HasWhiteboard = true,
                            Name = "Classroom 4"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000605"),
                            Capacity = 100,
                            Description = "Classroom 5",
                            HasComputers = true,
                            HasProjector = true,
                            HasWhiteboard = true,
                            Name = "Classroom 5"
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CourseType")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("CourseCode")
                        .IsUnique();

                    b.HasIndex("DepartmentId");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000301"),
                            CourseCode = "MATH",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Mathematics Course",
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000302"),
                            CourseCode = "ALG",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Algebra Course",
                            Name = "Algebra"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000303"),
                            CourseCode = "GEO",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Geometry Course",
                            Name = "Geometry"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000304"),
                            CourseCode = "MATHF",
                            CourseType = "Elective",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Math Fundamentals Course",
                            Name = "Math Fundamentals"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000305"),
                            CourseCode = "SCI",
                            CourseType = "Elective",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Science Course",
                            Name = "Science"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000306"),
                            CourseCode = "PHY",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Physics Course",
                            Name = "Physics"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000307"),
                            CourseCode = "CHEM",
                            CourseType = "Lab",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Chemistry Course",
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000308"),
                            CourseCode = "ENV",
                            CourseType = "Elective",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Environmental Science Course",
                            Name = "Environmental Science"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000309"),
                            CourseCode = "SCIF",
                            CourseType = "Elective",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Science Fundamentals Course",
                            Name = "Science Fundamentals"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000310"),
                            CourseCode = "CS",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Computer Science Course",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000311"),
                            CourseCode = "CP",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Computer Programming Course",
                            Name = "Computer Programming"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000312"),
                            CourseCode = "CA",
                            CourseType = "Lab",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Computer Applications Course",
                            Name = "Computer Applications"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000313"),
                            CourseCode = "CSF",
                            CourseType = "Elective",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Computer Science Fundamentals Course",
                            Name = "Computer Science Fundamentals"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000314"),
                            CourseCode = "DS",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Data Structures Course",
                            Name = "Data Structures"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000315"),
                            CourseCode = "ALGR",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Algorithms Course",
                            Name = "Algorithms"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000316"),
                            CourseCode = "MUS",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Music Course",
                            Name = "Music"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000317"),
                            CourseCode = "PAINT",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Painting Course",
                            Name = "Painting"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000318"),
                            CourseCode = "PHOTO",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Photography Course",
                            Name = "Photography"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000319"),
                            CourseCode = "DANCE",
                            CourseType = "Core",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Dance Course",
                            Name = "Dance"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000320"),
                            CourseCode = "ARTH",
                            CourseType = "Elective",
                            Credits = 3,
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Art History Course",
                            Name = "Art History"
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Mathematics Department",
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Science Department",
                            Name = "Science"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Computer Science Department",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Arts Department",
                            Name = "Arts"
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Equipment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000701"),
                            Brand = "Bunsen",
                            Condition = "Good",
                            Description = "Bunsen Burner",
                            Name = "Bunsen Burner",
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000702"),
                            Brand = "Beaker",
                            Condition = "Good",
                            Description = "Beaker",
                            Name = "Beaker",
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000703"),
                            Brand = "Prism",
                            Condition = "Good",
                            Description = "Prism",
                            Name = "Prism",
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000704"),
                            Brand = "Magnets",
                            Condition = "Good",
                            Description = "Magnets",
                            Name = "Magnets",
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000705"),
                            Brand = "Computer",
                            Condition = "Good",
                            Description = "Computer",
                            Name = "Computer",
                            Quantity = 40
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000706"),
                            Brand = "Projector",
                            Condition = "Good",
                            Description = "Projector",
                            Name = "Projector",
                            Quantity = 6
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Furniture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Furniture", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000801"),
                            Color = "Brown",
                            Description = "Desk",
                            Material = "Wood",
                            Name = "Desk",
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000802"),
                            Color = "Black",
                            Description = "Chair",
                            Material = "Wood",
                            Name = "Chair",
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000803"),
                            Color = "White",
                            Description = "Whiteboard",
                            Material = "Plastic",
                            Name = "Whiteboard",
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Groups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000101"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Mathematics Group",
                            GroupCode = "MATH",
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000102"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Algebra Group",
                            GroupCode = "ALG",
                            Name = "Algebra"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000103"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Geometry Group",
                            GroupCode = "GEO",
                            Name = "Geometry"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000201"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Science Group",
                            GroupCode = "SCI",
                            Name = "Science"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000202"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Physics Group",
                            GroupCode = "PHY",
                            Name = "Physics"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000203"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Chemistry Group",
                            GroupCode = "CHEM",
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000204"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Description = "Environmental Science Group",
                            GroupCode = "ENV",
                            Name = "Environmental Science"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000205"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Computer Science Group",
                            GroupCode = "CS",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000206"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Computer Programming Group",
                            GroupCode = "CP",
                            Name = "Computer Programming"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000207"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Description = "Computer Applications Group",
                            GroupCode = "CA",
                            Name = "Computer Applications"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000208"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Music Group",
                            GroupCode = "MUS",
                            Name = "Music"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000209"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Painting Group",
                            GroupCode = "PAINT",
                            Name = "Painting"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000210"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Photography Group",
                            GroupCode = "PHOTO",
                            Name = "Photography"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000211"),
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Description = "Dance Group",
                            GroupCode = "DANCE",
                            Name = "Dance"
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.LabRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("HasChemicals")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("LabRooms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000501"),
                            Capacity = 20,
                            Description = "Chemistry Lab",
                            Equipment = "Chemicals, Beakers, Bunsen Burners",
                            HasChemicals = true,
                            Name = "Chemistry Lab",
                            Subject = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000502"),
                            Capacity = 20,
                            Description = "Physics Lab",
                            Equipment = "Bunsen Burners, Magnets, Prisms",
                            HasChemicals = false,
                            Name = "Physics Lab",
                            Subject = "Physics"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000503"),
                            Capacity = 20,
                            Description = "Computer Lab",
                            Equipment = "Computers, Projector",
                            HasChemicals = false,
                            Name = "Computer Lab",
                            Subject = "Computer Science"
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Phone")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000901"),
                            DateOfBirth = new DateOnly(2000, 1, 1),
                            Email = "",
                            FirstName = "John",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000102"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000902"),
                            DateOfBirth = new DateOnly(2000, 1, 2),
                            Email = "",
                            FirstName = "Jane",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000102"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000903"),
                            DateOfBirth = new DateOnly(2000, 1, 3),
                            Email = "",
                            FirstName = "David",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000102"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000904"),
                            DateOfBirth = new DateOnly(2000, 1, 4),
                            Email = "",
                            FirstName = "Bob",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000102"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000905"),
                            DateOfBirth = new DateOnly(2000, 1, 5),
                            Email = "",
                            FirstName = "Jill",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000203"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000906"),
                            DateOfBirth = new DateOnly(2000, 1, 6),
                            Email = "",
                            FirstName = "Adam",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000203"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000907"),
                            DateOfBirth = new DateOnly(2000, 1, 7),
                            Email = "",
                            FirstName = "James",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000203"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000908"),
                            DateOfBirth = new DateOnly(2000, 1, 8),
                            Email = "",
                            FirstName = "Jenny",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000203"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000909"),
                            DateOfBirth = new DateOnly(2000, 1, 9),
                            Email = "",
                            FirstName = "Sara",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000203"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000910"),
                            DateOfBirth = new DateOnly(2000, 1, 10),
                            Email = "",
                            FirstName = "Jack",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000206"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000911"),
                            DateOfBirth = new DateOnly(2000, 1, 11),
                            Email = "",
                            FirstName = "Andrew",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000206"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000912"),
                            DateOfBirth = new DateOnly(2000, 1, 12),
                            Email = "",
                            FirstName = "Thomas",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000206"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000913"),
                            DateOfBirth = new DateOnly(2001, 1, 13),
                            Email = "",
                            FirstName = "Elaine",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000103"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000914"),
                            DateOfBirth = new DateOnly(2001, 1, 14),
                            Email = "",
                            FirstName = "Eli",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000103"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000915"),
                            DateOfBirth = new DateOnly(2001, 1, 15),
                            Email = "",
                            FirstName = "Dominic",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000103"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000916"),
                            DateOfBirth = new DateOnly(2001, 1, 16),
                            Email = "",
                            FirstName = "Lily",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000204"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000917"),
                            DateOfBirth = new DateOnly(2001, 1, 17),
                            Email = "",
                            FirstName = "Liam",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000204"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000918"),
                            DateOfBirth = new DateOnly(2001, 1, 18),
                            Email = "",
                            FirstName = "Olivia",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000204"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000919"),
                            DateOfBirth = new DateOnly(2001, 1, 19),
                            Email = "",
                            FirstName = "Noah",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000207"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000920"),
                            DateOfBirth = new DateOnly(2002, 1, 20),
                            Email = "",
                            FirstName = "Emma",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000207"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000921"),
                            DateOfBirth = new DateOnly(2002, 1, 21),
                            Email = "",
                            FirstName = "Oliver",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000207"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000922"),
                            DateOfBirth = new DateOnly(2002, 1, 22),
                            Email = "",
                            FirstName = "Ava",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000205"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000923"),
                            DateOfBirth = new DateOnly(2002, 1, 23),
                            Email = "",
                            FirstName = "William",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000205"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000924"),
                            DateOfBirth = new DateOnly(2002, 1, 24),
                            Email = "",
                            FirstName = "Sophia",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000205"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000925"),
                            DateOfBirth = new DateOnly(2000, 1, 25),
                            Email = "",
                            FirstName = "Ethan",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000208"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000926"),
                            DateOfBirth = new DateOnly(2000, 1, 26),
                            Email = "",
                            FirstName = "Isabella",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000208"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000927"),
                            DateOfBirth = new DateOnly(2000, 1, 27),
                            Email = "",
                            FirstName = "James",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000208"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000928"),
                            DateOfBirth = new DateOnly(2003, 1, 28),
                            Email = "",
                            FirstName = "Lucas",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000209"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000929"),
                            DateOfBirth = new DateOnly(2003, 1, 29),
                            Email = "",
                            FirstName = "Mia",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000209"),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000930"),
                            DateOfBirth = new DateOnly(2003, 1, 30),
                            Email = "",
                            FirstName = "Alexander",
                            Grade = "",
                            GroupId = new Guid("00000000-0000-0000-0000-000000000209"),
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.StudentCourse", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Phone")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000401"),
                            Bio = "John Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Email = "john.doe@sampleschool.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "111-111-1111"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000402"),
                            Bio = "Jane Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Email = "",
                            FirstName = "Jane",
                            LastName = "Doe",
                            Phone = "555-555-5555"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000403"),
                            Bio = "David Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Email = "",
                            FirstName = "David",
                            LastName = "Doe",
                            Phone = "123-123-1234"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000404"),
                            Bio = "Bob Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Email = "",
                            FirstName = "Bob",
                            LastName = "Doe",
                            Phone = "222-222-2222"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000405"),
                            Bio = "Jill Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Email = "",
                            FirstName = "Jill",
                            LastName = "Doe",
                            Phone = "333-333-3333"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000406"),
                            Bio = "Adam Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Email = "",
                            FirstName = "Adam",
                            LastName = "Doe",
                            Phone = "333-333-3333"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000407"),
                            Bio = "James Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Email = "",
                            FirstName = "James",
                            LastName = "Doe",
                            Phone = "444-444-4444"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000408"),
                            Bio = "Jenny Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Email = "",
                            FirstName = "Jenny",
                            LastName = "Doe",
                            Phone = "666-666-6666"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000409"),
                            Bio = "Sara Doe is a teacher at Sample School.",
                            DepartmentId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Email = "",
                            FirstName = "Sara",
                            LastName = "Doe",
                            Phone = "777-777-7777"
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.TeacherCourse", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCourses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000301"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000401")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000302"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000401")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000304"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000401")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000302"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000402")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000305"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000403")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000306"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000403")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000307"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000403")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000308"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000403")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000309"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000403")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000310"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000404")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000311"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000404")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000312"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000404")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000313"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000404")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000314"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000404")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000315"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000405")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000313"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000405")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000314"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000405")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000316"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000406")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000320"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000406")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000317"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000407")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000320"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000407")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000318"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000408")
                        },
                        new
                        {
                            CourseId = new Guid("00000000-0000-0000-0000-000000000319"),
                            TeacherId = new Guid("00000000-0000-0000-0000-000000000409")
                        });
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Course", b =>
                {
                    b.HasOne("MyFirstApi.Graphql.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Group", b =>
                {
                    b.HasOne("MyFirstApi.Graphql.Models.Department", "Department")
                        .WithMany("Groups")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Student", b =>
                {
                    b.HasOne("MyFirstApi.Graphql.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.StudentCourse", b =>
                {
                    b.HasOne("MyFirstApi.Graphql.Models.Course", null)
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFirstApi.Graphql.Models.Student", null)
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Teacher", b =>
                {
                    b.HasOne("MyFirstApi.Graphql.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.TeacherCourse", b =>
                {
                    b.HasOne("MyFirstApi.Graphql.Models.Course", null)
                        .WithMany("TeacherCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFirstApi.Graphql.Models.Teacher", null)
                        .WithMany("TeacherCourses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Course", b =>
                {
                    b.Navigation("StudentCourses");

                    b.Navigation("TeacherCourses");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Groups");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("MyFirstApi.Graphql.Models.Teacher", b =>
                {
                    b.Navigation("TeacherCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
